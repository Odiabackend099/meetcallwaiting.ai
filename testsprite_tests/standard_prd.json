{
  "meta": {
    "project": "Callwaiting AI",
    "date": "2025-09-13",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Callwaiting AI is an advanced telephony and business automation platform enabling merchants to handle missed and incoming calls via AI-driven IVR, process orders and bookings, integrate payments, calendars, and notifications seamlessly, improving operational efficiency and customer experience.",
  "core_goals": [
    "Provide 24/7 AI-powered telephony to capture and route customer calls effectively.",
    "Enable merchants to manage orders and bookings automatically through integrated systems.",
    "Support multiple payment providers (Stripe, PayPal) with secure, reliable webhook handling.",
    "Integrate calendar providers (Google, Calendly) for real-time booking management.",
    "Deliver multi-channel notifications (SMS, Email) for confirmations and alerts.",
    "Ensure system reliability, scalability, and security with robust validation and monitoring.",
    "Automate business workflows and monitoring using n8n automation platform."
  ],
  "key_features": [
    "Complete Merchant Management API for CRUD operations on merchant profiles and settings.",
    "Order Management API with payment link generation and secure payment status updates.",
    "Booking Management API integrated with calendar services for appointment scheduling.",
    "Twilio Voice API supporting IVR call routing, voicemail capture, and SMS compliance.",
    "Multi-provider Payment Webhooks API with signature verification and idempotency.",
    "Calendar Integration API supporting OAuth and event creation for Google and Calendly.",
    "Notification API for sending SMS and email notifications reliably via Twilio and SendGrid.",
    "Number Pool Management API for allocating Twilio numbers to merchants regionally.",
    "TTS Gateway API providing text-to-speech synthesis with multiple engines for AI voice responses.",
    "Comprehensive security stack including rate limiting, PII protection, webhook validation, and JWT authorization.",
    "End-to-end onboarding wizard with multi-step merchant setup and validations.",
    "Health Check API and monitoring endpoints for system status and alerting.",
    "N8N workflow integration for webhook retries, daily reports, and health monitoring."
  ],
  "user_flow_summary": [
    "Merchant signs up using the onboarding wizard, creating a profile with necessary details.",
    "Merchant connects payment and calendar providers via configuration APIs.",
    "Merchant allocates a Twilio phone number to receive calls.",
    "Customer calls the assigned number, Callwaiting AI answers with IVR options for orders or bookings.",
    "Customer interacts with IVR, placing orders or booking appointments through AI-driven prompts.",
    "Orders generate secure payment links sent via SMS/email; payments are processed and confirmed through webhook events.",
    "Bookings are created and synced with connected calendar providers, with confirmations sent to customers.",
    "Notifications are sent for order confirmations, payment receipts, booking confirmations, and voicemails.",
    "System monitors health and retries failed webhooks automatically using n8n workflows.",
    "Merchants receive daily summaries and have visibility into call, order, and booking activities via dashboard."
  ],
  "validation_criteria": [
    "All API endpoints must pass comprehensive unit and integration tests with 100% critical path coverage.",
    "End-to-end user flows—including onboarding, call handling, order/payment processing, booking, and notifications—must pass automated E2E tests.",
    "Webhook handlers for Stripe, PayPal, Twilio must verify signatures and ensure idempotent processing.",
    "Rate limiting must enforce a maximum of 100 requests per 15 minutes per IP with proper HTTP 429 responses.",
    "PII data must be masked in logs and secure transfer protocols used (TLS).",
    "N8N workflows must handle failed webhook retries with exponential backoff and dead letter queues.",
    "System health endpoints must report accurate status and trigger alerts when failures detected.",
    "Security audits must confirm no data leakage and proper authorization checks using JWT and database RLS.",
    "Frontend must provide user feedback, loading states, and error handling during onboarding and daily operations.",
    "Performance metrics including API response times must meet targets (<500ms average)."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Node.js",
      "Express.js",
      "Supabase",
      "Twilio",
      "Stripe",
      "PayPal",
      "Vite",
      "HTML/CSS/JavaScript",
      "JWT",
      "n8n"
    ],
    "features": [
      {
        "name": "Merchant Management API",
        "description": "Create, read, update merchant profiles and settings",
        "files": [
          "apps/api/src/routes/merchants.ts",
          "apps/api/src/middleware/auth.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Merchant Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/merchants/create": {
              "post": {
                "summary": "Create a new merchant",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "name",
                          "industry",
                          "timezone",
                          "country",
                          "currency"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "industry": {
                            "type": "string"
                          },
                          "timezone": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "website": {
                            "type": "string"
                          },
                          "owner_phone": {
                            "type": "string"
                          },
                          "billing_email": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Merchant created successfully",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "merchant": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/merchants/{merchantId}": {
              "get": {
                "summary": "Get merchant by ID",
                "parameters": [
                  {
                    "name": "merchantId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Merchant details",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "merchant": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Order Management API",
        "description": "Create orders, handle payments, and manage order status",
        "files": [
          "apps/api/src/routes/orders.ts",
          "apps/api/src/routes/webhooks.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Order Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/orders/create": {
              "post": {
                "summary": "Create a new order",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "merchant_id",
                          "items",
                          "customer_phone"
                        ],
                        "properties": {
                          "merchant_id": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array"
                          },
                          "customer_phone": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Order created successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Booking Management API",
        "description": "Create appointments, integrate with calendar providers",
        "files": [
          "apps/api/src/routes/bookings.ts",
          "apps/api/src/utils/calendarService.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Booking Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/bookings/create": {
              "post": {
                "summary": "Create a new booking",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "merchant_id",
                          "customer_phone",
                          "service",
                          "starts_at"
                        ],
                        "properties": {
                          "merchant_id": {
                            "type": "string"
                          },
                          "customer_phone": {
                            "type": "string"
                          },
                          "customer_email": {
                            "type": "string"
                          },
                          "service": {
                            "type": "string"
                          },
                          "starts_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ends_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "location": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Booking created successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Payment Webhooks API",
        "description": "Handle Stripe and PayPal payment webhooks with idempotency",
        "files": [
          "apps/api/src/routes/webhooks.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Payment Webhooks API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/webhooks/stripe": {
              "post": {
                "summary": "Handle Stripe webhook events",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Webhook processed successfully"
                  }
                }
              }
            },
            "/api/webhooks/paypal": {
              "post": {
                "summary": "Handle PayPal webhook events",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Webhook processed successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Twilio Voice API",
        "description": "Handle incoming calls, IVR interactions, and SMS",
        "files": [
          "apps/api/src/routes/webhooks.ts",
          "apps/api/src/routes/ivr.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Twilio Voice API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/webhooks/twilio/voice": {
              "post": {
                "summary": "Handle incoming Twilio voice calls",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "type": "object"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "TwiML response",
                    "content": {
                      "text/xml": {
                        "schema": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/webhooks/twilio/ivr": {
              "post": {
                "summary": "Handle IVR digit selections",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "type": "object"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "TwiML response"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Number Pool Management API",
        "description": "Allocate and manage Twilio phone numbers",
        "files": [
          "apps/api/src/routes/numberPool.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Number Pool Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/numbers/allocate": {
              "post": {
                "summary": "Allocate a phone number to a merchant",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "merchant_id"
                        ],
                        "properties": {
                          "merchant_id": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Number allocated successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Configuration Management API",
        "description": "Connect payment providers, calendar services, and email",
        "files": [
          "apps/api/src/routes/config.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Configuration Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/config/payments/connect": {
              "post": {
                "summary": "Connect payment provider (Stripe/PayPal)",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "merchant_id",
                          "provider"
                        ],
                        "properties": {
                          "merchant_id": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string",
                            "enum": [
                              "stripe",
                              "paypal"
                            ]
                          },
                          "account_id": {
                            "type": "string"
                          },
                          "webhook_endpoint_secret": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Payment provider connected successfully"
                  }
                }
              }
            },
            "/api/config/calendar/connect": {
              "post": {
                "summary": "Connect calendar provider (Google/Calendly)",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "merchant_id",
                          "provider"
                        ],
                        "properties": {
                          "merchant_id": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string",
                            "enum": [
                              "google",
                              "calendly"
                            ]
                          },
                          "calendar_id": {
                            "type": "string"
                          },
                          "access_token": {
                            "type": "string"
                          },
                          "refresh_token": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Calendar provider connected successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Notification API",
        "description": "Send SMS and email notifications via Twilio and SendGrid",
        "files": [
          "apps/api/src/routes/notifications.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Notification API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/notifications/sms/send": {
              "post": {
                "summary": "Send SMS notification",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "to",
                          "message"
                        ],
                        "properties": {
                          "to": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "merchant_id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "SMS sent successfully"
                  }
                }
              }
            },
            "/api/notifications/email/send": {
              "post": {
                "summary": "Send email notification",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "to",
                          "subject"
                        ],
                        "properties": {
                          "to": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "html": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "merchant_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Email sent successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Health Check API",
        "description": "Monitor system health and service status",
        "files": [
          "apps/api/src/routes/health.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Health Check API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/health": {
              "get": {
                "summary": "Get system health status",
                "responses": {
                  "200": {
                    "description": "System health information",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "services": {
                              "type": "object"
                            },
                            "system": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "TTS Gateway API",
        "description": "Text-to-speech synthesis with multiple engines",
        "files": [
          "apps/tts-gateway/src/server.ts",
          "apps/tts-gateway/src/engines/piper.ts",
          "apps/tts-gateway/src/engines/cosyvoice.ts",
          "apps/tts-gateway/src/engines/riva.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "TTS Gateway API",
            "version": "1.0.0"
          },
          "paths": {
            "/v1/tts:synthesize": {
              "post": {
                "summary": "Synthesize text to speech",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "required": [
                          "text"
                        ],
                        "properties": {
                          "text": {
                            "type": "string"
                          },
                          "voice_id": {
                            "type": "string"
                          },
                          "merchant_id": {
                            "type": "string"
                          },
                          "engine": {
                            "type": "string",
                            "enum": [
                              "piper",
                              "cosyvoice",
                              "riva"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Audio synthesis successful",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "voice_id": {
                              "type": "string"
                            },
                            "engine": {
                              "type": "string"
                            },
                            "format": {
                              "type": "string"
                            },
                            "audio_base64": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Frontend Onboarding",
        "description": "Multi-step onboarding wizard for merchant setup",
        "files": [
          "onboarding.html",
          "src/api.js",
          "src/config.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Frontend Onboarding",
            "version": "1.0.0"
          },
          "paths": {
            "/onboarding": {
              "get": {
                "summary": "Onboarding wizard page",
                "responses": {
                  "200": {
                    "description": "Onboarding HTML page"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
